{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "title": "Save Data",
    "description": "Saves the data about classes, attributes, and relationships from the UML Editor",
    "type": "object",
    "properties": {
        "classes": {
            "description": "A class created in the UML editor, requires a name, and has fields and methods that can be null, if a method is not null it can also contain parameters that can be null",

            "type": "object",
            "properties": {
                "name": {
                    "description": "The name for the class",
                    "type": "string"
                },
                "fields":{
                    "description": "fields are a part of a class, they have a name and a value type",
                    "properties":{
                        "name": {
                            "description": "The name of the field",
                            "type": "string"
                        }
                    },
                    "type":["array", "boolean", "integer", "null", "number", "object", "string"]
                
                },
                "methods":{
                    "description": "Methods are a part of a class, they have a name and return type, and they can also contain parameters",

                    "type":"object",
                    "properties":{
                        "name":{
                            "description": "The name of the method",
                            "type": "string"
                        },
                        "return type": {
                            "description": "The return type of the method",
                            "type":["array", "boolean", "integer", "null", "number", "object", "string"]
                        },
                        "parameters": {
                            "description": "Can be any number of parameters tied to a method, each contain a name and a value type",
                            "type": "array"
                        }
                    }
                }
            }
        },
        "relationships": {
            "description": "Relationships are how classes relate to each other",

            "type": "object",
            "properties": {
                "Source Class": {
                    "description": "the first class in the relationship, meaning the relation starts from here",
                    "type": "object"
                },
                "Destination Class": {
                    "description": "the second class in the relationship, meaning the relation ends here",
                    "type": "object"
                },
                "relation type":{
                    "description": "the type of relationship between the two classes",
                    "type":"string"
                }
            },
            "required": ["Source Class", "Destination Class", "relation type"]
        }
    },
    "required": ["Classes", "Relationships"]
}